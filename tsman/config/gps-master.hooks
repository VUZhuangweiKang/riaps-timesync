# hook functions for gps-master role

import logging

def before_config():
    """Execute custom steps before configuring new role."""
    pass

def after_config():
    """Execute custom steps after configuring new role."""
    pass

def before_restart():
    """Execute custom steps before restarting services."""
    if not _is_chronocape_present():
        logging.warning('ChronoCape board has not been found, trying to enable now')
        with open('/sys/devices/platform/bone_capemgr/slots', 'w') as slots:
            slots.write('CHRONOCAPE\n')

def after_restart():
    """Execute custom steps after restarting services."""
    pass

def check_status():
    """Return True of service status looks good, otherwise return False."""
    looks_good = True
    logging.debug('Checking for ChronoCape board')
    if not _is_chronocape_present():
        logging.warning('ChronoCape board has not been found')
        looks_good = False

    # TODO: check or briefly monitor logs for actual timesync performance

    return looks_good

def _is_chronocape_present():
    """Checks if the ChronoCape board is detected/enabled by capemgr"""
    chronocape_found = False
    with open('/sys/devices/platform/bone_capemgr/slots') as slots:
        for slot in slots:
            if 'CHRONOCAPE' in slot:
                chronocape_found = True
    return chronocape_found
